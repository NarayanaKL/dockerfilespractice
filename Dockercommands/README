docker images --filter "LABEL=AUTHOR=NARAYANA" -based on filder
docker run lokanarayana/env:v2 ping -c 4 google.com
docker run -e DURATION=20HRS lokanarayana/env:v2 env

CMD ["nginx", "-g", "daemon off;"] -to runn infinity time 

docker tag lokanarayana/copy:c1  lokanarayana/smallproject:s1 --taging to local to docker hub

COPY instruction is useful to copy the files from local to image.
ADD is same as COPY. It is useful to copy files from local to container. But it has 2 extra capabilities.

ADD can download the file directly from internet to the container.
ADD can untar/unzip the file directly into the container.

docker run -it add:v1(image) we can go directly inside the container

docker rmi -f add:v1 removing the image fourcefully

docker run -it entrypoint:e1
docker run  entrypoint:e1
docker ps -a --no-trunc  -- we can see the CMD and Entrypoint data with combained

docker system prune - to remove all the un used container 
It is used to run the commands as particular user.

docker run -it user.u1 env --
docker rm -f 761658a60d9c -force full stoping the running container

sudo su -    to see the volumes folders..
 cd /var/lib/docker
 docker volume create nginx
docker volume inspect nginx

docker run -d -v nginx:/usr/share/nginx/html -p 80:80 nginx
docker run -d -v my-sql:/var/lib/mysql mysql
docker run -d -v mysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=root123 mysql
show batabaes;
docker ps -a -q - we get only ID's
docker container ls -all --filter label="Narayana"
docker run -d --name mongodb mangodb:db1 --assigningnames



docker inspect c20b786b1735 | grep -i ip
 every container has ip address
 docker network ls
docker network create roboshop --creating networking 
 docker network connect roboshop mangodb






